Configuration
=============

Perf-studio Configuration
-------------------------

The user specific configuration is located under

$HOME/.config/perf-studio/config

Via "perf-studio-ctrtl config" the configuration can be created/modified/edited.
"perf-studio-ctrtl config --edit" to pop up a editor with the file loaded.

You can edit configuration values via the --add argument:

perf-studio-ctrtl config --add common.username="John Doe" common.perf-path=/usr/src/linux/tools/perf


Project Configuration
---------------------

Each perf-project is saved in $HOME/.cache/perf-studio/projects/. The unique ID
of the project is a increasing number. Removed project directories are recycled
if a new project is created, thus you cannot draw conclusions when a project
was created by looking at the ID.

All project related data is stored in ../ID/config - a INI style formated
configuration file. You can edit (but SHOULD not) by hand by calling:

perf-studio-ctrtl project --edit <ID>

E.g: perf-studio-ctrtl project --edit 0001


Example project configuration:


  [common]
    exec-path = /bin/ls
    exec-args = -al;/proc

  [times]
    create-time = 12230.101
    last-accessed = 12233.010




Project Structure
=================


$HOME/.cache/perf-studio/projects/
$HOME/.cache/perf-studio/projects/0001/
$HOME/.cache/perf-studio/projects/0001/config
$HOME/.cache/perf-studio/projects/0001/refs/2012-02-11-20:20.2949  ->  ../db/ee6a975d30943d63dc6f1685248ecbc3-000
$HOME/.cache/perf-studio/projects/0001/db/ee6a975d30943d63dc6f1685248ecbc3-000/
$HOME/.cache/perf-studio/projects/0001/db/ee6a975d30943d63dc6f1685248ecbc3-000/info
$HOME/.cache/perf-studio/projects/0001/db/ee6a975d30943d63dc6f1685248ecbc3-000/perf-00001.data
$HOME/.cache/perf-studio/projects/0001/db/ee6a975d30943d63dc6f1685248ecbc3-000/perf-00002.data
$HOME/.cache/perf-studio/projects/0001/db/ee6a975d30943d63dc6f1685248ecbc3-000/time-00001.data

The longer unique id the MD5 sum of the executable. This provides a clean
way to identify if a executable was modified (re-compiled) and measurements are
outdated. The last three digits are normally not used, but provide a way to
re-start measurement although the file is not modified. This can be useful if
new command-line arguments are given or the system was modified/optimized (like
changed sysctl)


The "info" file contains information about each data file. The most important:
what data is traced in the file, the format, etc, pp. The type key is required
and is a human readable form of the EVENT_TYPE_*, see include/perf-studio.h for
a list of supported events.

info:

  [perf-00001.data]
    type = PERF_SAMPLING
		events = cycles,10000,us;instructions,10000,us

  [perf-00002.data]
    type = PERF_SAMPLING
		events = cycles,10000,us;instructions,10000,us

  [time-00001.data]
    type = TIME

